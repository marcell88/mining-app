# handlers/commands_handler.py
from telegram import Update
from telegram.ext import ContextTypes
from services.database_service import get_stats, reset_stats
from config.settings import LOGGING_CHAT_ID
from telegram.constants import ParseMode # Import ParseMode

async def handle_stats_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /stats.
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –≤—Ö–æ–¥—è—â–∏–º/–∏—Å—Ö–æ–¥—è—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏—è–º
    (–æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞).
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–∏—à–ª–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –∏–º–µ–µ—Ç –ø—Ä–∞–≤–æ –µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å,
    # –Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑ LOGGING_CHAT_ID, –µ—Å–ª–∏ —ç—Ç–æ —á–∞—Ç –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è.
    # –ï—Å–ª–∏ LOGGING_CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–∏—à–ª–∞ –Ω–µ –∏–∑ –Ω–µ–≥–æ,
    # –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∏–ª–∏ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å.
    if LOGGING_CHAT_ID and str(update.effective_chat.id) != LOGGING_CHAT_ID:
        await update.message.reply_text("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ —á–∞—Ç–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è.")
        return
    
    stats = get_stats()
    
    # MarkdownV2 requires escaping of many characters:
    # _, *, [, ], (, ), ~, `, >, #, +, -, =, |, {, }, ., !
    # We want bolding for titles, so `*` is left unescaped for those parts.
    # We need to escape literal `(`, `)`, and `%` signs.
    
    response_text = (
        "üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π:*\n\n"
        "*–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*\n"
        f"  –í—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: `{stats['total_incoming']}`\n"
        f"  –ò—Å—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π \\(–ø–µ—Ä–µ—Å–ª–∞–Ω–æ\\): `{stats['total_outgoing']}`\n" # Escaped parentheses
        f"  –ü—Ä–æ—Ü–µ–Ω—Ç –ø–µ—Ä–µ—Å—ã–ª–∫–∏: `{stats['total_percentage']:.2f}\\%`\n\n"      # Escaped percentage sign
        "*–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞:*\n"
        f"  –í—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: `{stats['last_24h_incoming']}`\n"
        f"  –ò—Å—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π \\(–ø–µ—Ä–µ—Å–ª–∞–Ω–æ\\): `{stats['last_24h_outgoing']}`\n" # Escaped parentheses
        f"  –ü—Ä–æ—Ü–µ–Ω—Ç –ø–µ—Ä–µ—Å—ã–ª–∫–∏: `{stats['last_24h_percentage']:.2f}\\%`"      # Escaped percentage sign
    )
    
    await update.message.reply_text(response_text, parse_mode=ParseMode.MARKDOWN_V2)
    print(f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {update.effective_user.id}.")

async def handle_zero_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /zero.
    –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ–±–Ω—É–ª—è–µ—Ç –≤—Å–µ —Å—á–µ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–∏—à–ª–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –∏–º–µ–µ—Ç –ø—Ä–∞–≤–æ –µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.
    if LOGGING_CHAT_ID and str(update.effective_chat.id) != LOGGING_CHAT_ID:
        await update.message.reply_text("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ —á–∞—Ç–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è.")
        return

    reset_stats()
    # The existing `\.` is correct for MarkdownV2
    await update.message.reply_text("–í—Å–µ —Å—á–µ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å–±—Ä–æ—à–µ–Ω—ã –¥–æ –Ω—É–ª—è\\.", parse_mode=ParseMode.MARKDOWN_V2)
    print(f"–°—á–µ—Ç—á–∏–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {update.effective_user.id}.")

